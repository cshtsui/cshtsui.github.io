{"version":3,"sources":["Selectors.tsx","SkillList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Selectors","props","handleChange","e","setState","target","name","value","undefined","onChange","state","aCulture","aCareer","classes","this","cultureMenuItems","cultures","map","i","MenuItem","key","id","careerMenuItems","careers","Box","display","mr","InputLabel","Select","labelId","displayEmpty","className","ccSelect","disabled","Component","withStyles","theme","createStyles","minWidth","width","SkillList","list","skills","el","App","cultureList","standard","professional","careerList","makeStyles","root","flexGrow","useStyles","useState","cultureSkills","setCultureSkills","careerSkills","setCareerSkills","unifiedSkills","setUnifiedSkills","Container","maxWidth","cultureId","careerId","culture","find","career","concat","sort","unified","Array","from","Set","Grid","container","spacing","item","xs","md","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.633b5b04.chunk.js","sourcesContent":["import React, {Component } from \"react\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles,Theme } from \"@material-ui/core/styles\";\r\nimport { WithStyles, createStyles } from \"@material-ui/core\";\r\nimport { SkillPack } from \"./MsInterfaces\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst selectorsStyles = (theme:Theme) => createStyles({\r\n\tccSelect: {\r\n\t  minWidth: \"4rem\",\r\n\t  width: \"9rem\"\r\n\t}\r\n });\r\n\r\n //All this for TypeScript to be able to use classes prop injected by\r\n //withStyles since we can't use the useStyles hook in class components. \r\n //Things are much easier using functional components. Using class\r\n //component here mainly as a learning exercise.\r\ninterface SelectorsProps extends WithStyles<typeof selectorsStyles> {\r\n\tcultures:SkillPack[],\r\n\tcareers:SkillPack[],\r\n\tonChange?(culture:number, career:number):void\r\n}\r\n\r\ninterface SelectorsState {\r\n\taCulture?:number,\r\n\taCareer?:number\r\n}\r\n\r\nclass Selectors extends Component<SelectorsProps,SelectorsState> {\r\n\r\n\tconstructor (props:SelectorsProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state={ aCulture: 0, aCareer: 0 };\r\n\t}\r\n\t\r\n\t//Material-ui select has a custom onChange callback\r\n\thandleChange = (e:any) => {\r\n\t\tthis.setState({[e.target.name]: e.target.value},()=>{\r\n\t\t\tif (this.props.onChange===undefined) return;\r\n\t\t\tthis.props.onChange(\r\n\t\t\t\tthis.state.aCulture === undefined ? -1 : this.state.aCulture,\r\n\t\t\t\tthis.state.aCareer === undefined ? -1 : this.state.aCareer\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst cultureMenuItems = this.props.cultures.map((i)=>(\r\n\t\t\t<MenuItem key={i.id} value={i.id}>{i.name}</MenuItem>\r\n\t\t));\r\n\t\tconst careerMenuItems = this.props.careers.map((i)=>(\r\n\t\t\t<MenuItem key={i.id} value={i.id}>{i.name}</MenuItem>\r\n\t\t));\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Box display=\"inline-block\" mr=\"2rem\">\r\n\t\t\t\t\t<InputLabel id=\"culture-label\">Culture</InputLabel>\r\n\t\t\t\t\t<Select \tid=\"culture-select\" labelId=\"culture-label\"\r\n\t\t\t\t\t\t\t\tname=\"aCulture\" displayEmpty\r\n\t\t\t\t\t\t\t\tclassName={classes.ccSelect}\r\n\t\t\t\t\t\t\t\tvalue={this.state.aCulture}\r\n\t\t\t\t\t\t\t\tonChange={(e):void => this.handleChange(e)}>\r\n\t\t\t\t\t\t<MenuItem value={0} disabled><em>Choose culture</em></MenuItem>\r\n\t\t\t\t\t\t{cultureMenuItems}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box display=\"inline-block\">\r\n\t\t\t\t\t<InputLabel id=\"career-label\">Career</InputLabel>\r\n\t\t\t\t\t<Select \tid=\"career-select\" labelId=\"career-label\"\r\n\t\t\t\t\t\t\t\tname=\"aCareer\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.aCareer} \r\n\t\t\t\t\t\t\t\tclassName={classes.ccSelect}\r\n\t\t\t\t\t\t\t\tonChange={(e):void => this.handleChange(e)}>\r\n\t\t\t\t\t\t<MenuItem value={0} disabled><em>Choose career</em></MenuItem>\r\n\t\t\t\t\t\t{careerMenuItems}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</Box>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//export default Selectors;\r\nexport default withStyles(selectorsStyles)(Selectors);","import React from \"react\";\r\n\r\ninterface SkillListProps {\r\n\tskills: string[]\r\n}\r\n\r\nfunction SkillList({skills}:SkillListProps) {\r\n\tconst list = skills.map((el)=>(<li>{el}</li>));\r\n\treturn (\r\n\t\t<ol>\r\n\t\t\t{list}\r\n\t\t</ol>\r\n\t);\r\n}\r\n\r\nexport default SkillList;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SkillPack } from \"./MsInterfaces\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Selectors from \"./Selectors\";\nimport SkillList from \"./SkillList\";\n\nfunction App() {\n  const cultureList: SkillPack[] = [\n    {\n      id: 100,\n      name: \"Rural\",\n      standard: [\"Athletics\", \"Brawn\", \"Drive\", \"Endurance\", \"First Aid\",\n        \"Locale\", \"Perception\", \"Ride\", \"Combat Style (culture)\"],\n      professional: [\"Craft (any)\", \"Mechanics\", \"Knowledge (any)\",\n        \"Musicianship\", \"Navigate\", \"Survival\", \"Track\"]\n    }, {\n      id: 101,\n      name: \"Urban\",\n      standard: [\"Conceal\", \"Deceit\", \"Drive\", \"Influence\", \"Insight\",\n        \"Locale\", \"Willpower\", \"Combat Style (culture)\"],\n      professional: [\"Art (any)\", \"Commerce\", \"Craft (any)\",\n        \"Courtesy\", \"Language (any)\", \"Knowledge (any)\",\n        \"Musicianship\", \"Streetwise\"]\n    }, {\n      id: 102,\n      name: \"Orbit\",\n      standard: [\"Conceal\", \"Deceit\", \"Pilot\", \"Influence\", \"Insight\",\n        \"Locale\", \"Willpower\", \"Combat Style (culture)\"],\n      professional: [\"Astrogation\", \"Electronics\", \"Knowledge (any)\",\n        \"Language (any)\", \"Mechanics\", \"Streetwise\"]\n    }\n  ];\n  const careerList: SkillPack[] = [\n    {\n      id: 200,\n      name: \"Agent\",\n      standard: [\"Conceal\", \"Deceit\", \"Evade\", \"Insight\", \"Perception\", \"Stealth\",\n        \"Combat Style (any)\"],\n      professional: [\"Culture (any)\", \"Disguise\", \"Language (any)\", \"Pilot\",\n        \"Sleight\", \"Streetwise\", \"Survival\", \"Track\"]\n    }, {\n      id: 201,\n      name: \"Belter\",\n      standard: [\"Athletics\", \"Brawn\", \"Endurance\", \"Locale\", \"Perception\",\n        \"Willpower\"],\n      professional: [\"Commerce\", \"Craft (Mining)\", \"Demolitions\", \"Engineering\",\n        \"Science (Geology)\", \"Mechanics\", \"Navigation (Underground)\", \"Pilot\", \n        \"Survival\"]\n    }, {\n      id: 202,\n      name: \"Bounty Hunter\",\n      standard: [\"Athletics\", \"Endurance\", \"Evade\", \"Insight\", \"Perception\",\n        \"Stealth\", \"Combat Style (any)\", \"Combat Style (Gunnery)\"],\n      professional: [\"Bureaucracy\", \"Commerce\", \"Culture (any)\", \"Pilot\",\n        \"Streetwise\", \"Survival\", \"Track\"]\n    }, {\n      id: 203,\n      name: \"Colonist\",\n      standard: [\"Athletics\", \"Brawn\", \"Drive\", \"Endurance\", \"Locale\",\n        \"Perception\", \"Ride\", \"Combat Style (any)\"],\n      professional: [\"Commerce\", \"Craft (any)\", \"Knowledge (Agriculture)\",\n        \"Mechanics\", \"Navigation\", \"Pilot\", \"Survival\", \"Track\"]\n    }, {\n      id: 204,\n      name: \"Criminal\",\n      standard: [\"Athletics\", \"Brawn\", \"Deceit\", \"Evade\", \"Insight\",\n        \"Perception\", \"Stealth\", \"Combat Style (any)\"],\n      professional: [\"Acting\", \"Commerce\", \"Electronics\", \"Gambling\",\n        \"Lockpicking\", \"Sleight\", \"Streetwise\"]\n    }, {\n      id: 205,\n      name: \"Detective\",\n      standard: [\"Customs\", \"Drive\", \"Evade\", \"Influence\", \"Insight\",\n        \"Perception\", \"Stealth\", \"Combat Style (any)\"],\n      professional: [\"Bureaucracy\", \"Culture (any)\", \"Disguise\",\n        \"Knowledge (any)\", \"Research\", \"Sleight\", \"Streetwise\"]\n    }, {\n      id: 206,\n      name: \"Gambler\",\n      standard: [\"Athletics\", \"Endurance\", \"Locale\", \"Perception\", \"Willpower\"],\n      professional: [\"Acting\", \"Bureaucracy\", \"Commerce\", \"Courtesy\", \"Gambling\",\n        \"Research\", \"Sleight\", \"Streetwise\"]\n    }, {\n      id: 207,\n      name: \"Journalist\",\n      standard: [\"Customs\", \"Deceit\", \"Influence\", \"Insight\", \"Locale\",\n        \"Native Tongue\", \"Perception\"],\n      professional: [\"Bureaucracy\", \"Culture (any)\", \"Language (any)\",\n        \"Knowledge (any)\", \"Oratory\", \"Politics\", \"Research\",\n        \"Streetwise\"]\n    }, {\n      id: 208,\n      name: \"Engineer\",\n      standard: [\"Brawn\", \"Culture (any)\", \"Drive\", \"Endurance\", \"Influence\",\n        \"Locale\", \"Willpower\"],\n      professional: [\"Commerce\", \"Computers\", \"Craft (any)\", \"Engineering\",\n        \"Electronics\", \"Gambling\", \"Mechanics\", \"Streetwise\", \"Vacc Suit\"]\n    }, {\n      id: 209,\n      name: \"Medic\",\n      standard: [\"First Aid\", \"Influence\", \"Insight\", \"Locale\", \"Perception\",\n        \"Willpower\"],\n      professional: [\"Commerce\", \"Craft (Physiological Specialty)\", \"Medicine\",\n        \"Language (any)\", \"Knowledge (Psychology)\", \"Knowledge (any)\", \"Research\",\n        \"Science (Astrobiology)\"]\n    }, {\n      id: 210,\n      name: \"Mercenary\",\n      standard: [\"Athletics\", \"Brawn\", \"Endurance\", \"Evade\", \"Unarmed\",\n        \"Combat Style (any)\",\"Combat Style (Gunnery)\"],\n      professional: [\"Craft (any)\", \"Engineering\", \"Gambling\", \n        \"Knowledge (Military History)\", \"Knowledge (Strategy & Tactics)\",\n        \"Oratroy\", \"Survival\"]\n    }, {\n      id: 211,\n      name: \"Miner\",\n      standard: [\"Athletics\", \"Brawn\", \"Endurance\", \"Locale\", \"Perception\",\n        \"Sing\",\"Willpower\"],\n      professional: [\"Commerce\", \"Craft (Mining)\", \"Engineering\", \n        \"Knowlege (Minerals)\", \"Mechanics\", \"Navigation (Underground)\", \n        \"Survival\", \"Zero G\"]\n    }, {\n      id: 212,\n      name: \"Merchant\",\n      standard: [\"Drive\", \"Deceit\", \"Insight\", \"Influence\", \"Locale\"],\n      professional: [\"Astrogation\", \"Bureaucracy\", \"Commerce\", \"Courtesy\", \n        \"Culture (any)\", \"Language (any)\", \"Pilot\", \"Streetwise\"]\n    }, {\n      id: 213,\n      name: \"Official\",\n      standard: [\"Customs\", \"Deceit\", \"Influence\", \"Insight\", \"Locale\",\n        \"Perception\", \"Willpower\"],\n      professional: [\"Bureaucracy\", \"Commerce\", \"Courtesy\", \"Language (any)\",\n        \"Knowledge (any)\", \"Oratory\", \"Politics\"]\n    }, {\n      id: 214,\n      name: \"Starship Pilot\",\n      standard: [\"Drive\", \"Endurance\", \"Evade\", \"Locale\", \"Perception\",\n        \"Combat Style (Gunnery)\", \"Willpower\"],\n      professional: [\"Astrogation\", \"Comms\", \"Culture (any)\", \"Science (Astronomy)\",\n        \"Mechanics\", \"Pilot\", \"Sensors\", \"Streetwise\", \"Vacc Suit\", \"Zero G\"]\n    }, {\n      id: 215,\n      name: \"Diplomat\",\n      standard: [\"Customs\", \"Deceit\", \"Influence\", \"Insight\", \"Locale\",\n        \"Native Tongue\", \"Perception\"],\n      professional: [\"Bureaucracy\", \"Courtesy\", \"Culture (any)\", \"Language (any)\",\n        \"Knowledge (any)\", \"Oratory\", \"Politics\"]\n    }, {\n      id: 216,\n      name: \"Priest\",\n      standard: [\"Customs\", \"Deceit\", \"Influence\", \"Insight\", \"Locale\",\n        \"Native Tongue\", \"Willpower\"],\n      professional: [\"Bureaucracy\", \"Courtesy\", \"Customs\", \"Knowledge (any)\",\n        \"Musicianship\", \"Oratory\", \"Politics\", \"Research\"]\n    }, {\n      id: 217,\n      name: \"Scholar\",\n      standard: [\"Influence\", \"Insight\", \"Locale\", \"Native Tongue\", \"Perception\", \n        \"Willpower\"],\n      professional: [\"Culture (any)\", \"Language (any)\", \"Knowledge (Primary)\", \n        \"Knowledge (Secondary)\", \"Oratory\", \"Research\", \"Teach\"]\n    }, {\n      id: 218,\n      name: \"Scientist\",\n      standard: [\"Customs\", \"Influence\", \"Insight\", \"Locale\", \"Native Tongue\", \n        \"Perception\", \"Willpower\"],\n      professional: [\"Culture (any)\", \"Engineering\", \"Language (any)\", \n        \"Oratory\", \"Research\", \"Science (any)\", \"Teach\"]\n    }, {\n      id: 219,\n      name: \"Scout\",\n      standard: [\"Athletics\", \"Drive\", \"Endurance\", \"First Aid\", \"Perception\", \n        \"Stealth\", \"Swim\", \"Combat Style (any)\", \"Combat Style (Gunnery)\"],\n      professional: [\"Astrogation\", \"Comms\", \"Culture (any)\", \"Medicine\",\n        \"Language (any)\", \"Knowledge (any)\", \"Navigation\", \"Pilot\", \"Sensors\",\n        \"Survival\", \"Track\"]\n    }, {\n      id: 220,\n      name: \"Smuggler\",\n      standard: [\"Conceal\", \"Customs\", \"Deceit\", \"Drive\", \"Influence\", \n        \"Insight\", \"Locale\", \"Combat Style (any)\", \"Combat Style (Gunnery)\"],\n      professional: [\"Astrogation\", \"Bureaucracy\", \"Commerce\", \"Comms\", \n        \"Customs (any)\", \"Language (any)\", \"Navigation\", \"Pilot\", \"Sensors\",\n        \"Streetwise\"]\n    }, {\n      id: 221,\n      name: \"Thief\",\n      standard: [\"Athletics\", \"Deceit\", \"Evade\", \"Insight\", \"Perception\", \n        \"Stealth\", \"Combat Style (any)\"],\n      professional: [\"Acting\", \"Commerce\", \"Disguise\", \"Electronics\",\n        \"Lockpicking\", \"Sleight\", \"Streetwise\"]\n    }\n  ];\n\n  //Styles not currently used. Left here for example.\n  const useStyles = makeStyles((theme)=>({\n    root: {\n      flexGrow:1\n    }\n  }));\n  const classes = useStyles();\n\n  //Understand useState with TypeScript \n  //https://lucasbassetti.com/blog/using-usestate-hook-with-typescript/\n  const [cultureSkills,setCultureSkills] = useState<string[]>([]);\n  const [careerSkills,setCareerSkills] = useState<string[]>([]);\n  const [unifiedSkills,setUnifiedSkills] = useState<string[]>([]);\n\n  const selectorsChange = (cultureId: number, careerId: number) => {\n    const culture: SkillPack | undefined = cultureList.find((el) => (el.id === cultureId));\n    const career: SkillPack | undefined = careerList.find((el) => (el.id === careerId));\n    if (culture!==undefined) {\n      setCultureSkills(culture.standard.concat(culture.professional).sort());\n    }\n    if (career!==undefined) {\n      setCareerSkills(career.standard.concat(career.professional).sort());\n    }\n    \n    if (culture===undefined || career===undefined) return;\n    const skills = culture.standard\n      .concat(culture.professional)\n      .concat(career.standard)\n      .concat(career.professional).sort();\n    const unified = Array.from(new Set(skills));\n    \n    setUnifiedSkills(unified);\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <h1>M-Space Skills Generator</h1>\n      <p>Choose your character&apos;s culture and career to obtain a skill list.</p>\n      <Selectors cultures={cultureList} careers={careerList} onChange={selectorsChange} />\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <p>\n            <strong>Culture</strong>\n            <br/>\n            Distribute 100 points among these skills\n          </p>\n          { cultureSkills.length>0 && \n          <SkillList skills={cultureSkills}/>\n          }\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <p>\n            <strong>Career</strong>\n            <br/>\n            Distribute 100 points among these skills\n          </p>\n          { careerSkills.length>0 && \n          <SkillList skills={careerSkills}/>\n          }\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <p>\n            <strong>Unified Skills</strong><br/>\n            Warning: Combines *(any) skills\n          </p>\n          { unifiedSkills.length>0 &&\n          <SkillList skills={unifiedSkills}/>  \n          }\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}